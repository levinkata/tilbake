@model QuoteResource

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool IsComplete = true;

    if (Model.InsurerId == Guid.Empty)
    {
        IsComplete = false;
    }

    foreach (var item in Model.QuoteItems)
    {
        if (item.SumInsured == 0 || item.Premium == 0 || String.IsNullOrEmpty(item.Excess))
        {
            IsComplete = false;
        }
    }
}

<div class="col-md-4 offset-md-8 bd-highlight mb-3">
    <div class="mr-auto p-2 bg-light">
        <h1>Quote</h1>
        <dl class="row">
            <dt class="col-6">
                Date:
            </dt>
            <dd class="col-6">
                @Model.QuoteDate.ToString("dd/MM/yyyy")
            </dd>
            <dt class="col-6">
                Quote Number:
            </dt>
            <dd class="col-6">
                @Model.QuoteNumber
            </dd>
        </dl>
    </div>
</div>
<div class="row">
    <div class="form-group">
        <h6>@Model.FullName</h6>
    </div>
</div>
@if (Model.IsConverted)
{
    <div class="alert alert-danger" role="alert">
        Quote was converted to policy!
    </div>
}
else
{
    if (IsComplete)
    {
        <div class="d-flex justify-content-md-end">
            <div class="form-group">
                <a asp-controller="Policies" asp-action="QuoteToPolicy" asp-route-quoteId="@Model.Id" class="btn btn-primary">Convert Quote to Policy</a>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info" role="alert">
            Quote is incomplete.
        </div>
        <div class="alert alert-dark" role="alert">
            Ensure that Insurer, Sum Insured, Premium or Excess are completed!
        </div>
    }
}
<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Insurer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Insurer)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.QuoteStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.QuoteStatus)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ClientInfo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ClientInfo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.InternalInfo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.InternalInfo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RunDay)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RunDay)
        </dd>
    </dl>
</div>
<div>
    @if (Model.IsConverted)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn disabled">Edit Quote</a>
    } else
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit Quote</a>
    }
    | <a asp-action="Index">Back</a>
</div>

<div class="form-group">
    @await Component.InvokeAsync("QuoteItems", new { quoteId = @Model.Id })
</div>


